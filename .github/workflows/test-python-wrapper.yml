name: Python Wrapper Test

on:
  push:
    branches: [ main, develop, feature/python-wrapper ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test-python-wrapper:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        pip install pytest pytest-cov

    - name: Create test configuration
      run: |
        cat > assignment.conf << EOF
        # Test configuration for GitHub Actions
        CLASSROOM_URL="https://classroom.github.com/classrooms/test/assignments/test"
        TEMPLATE_REPO_URL="https://github.com/test/template"
        GITHUB_ORGANIZATION="test-org"
        CLASSROOM_REPO_URL="https://github.com/test-org/test-assignment"
        SECRETS_JSON='{"TEST_SECRET": "test-value"}'
        EOF

    - name: Run unit tests
      run: |
        pytest tests/test_cli.py tests/test_bash_wrapper.py tests/test_config.py -v --tb=short

    - name: Test basic functionality
      run: |
        make test

    - name: Run comprehensive import tests
      run: |
        python -c "
        # Test all core functionality
        from classroom_pilot.cli import app
        from classroom_pilot.bash_wrapper import BashWrapper  
        from classroom_pilot.config import Configuration
        from classroom_pilot.utils import setup_logging
        print('✅ All imports successful')
        
        # Test basic CLI functionality
        import subprocess
        result = subprocess.run(['python', '-c', 'import classroom_pilot; print(\"Package loaded\")'], 
                               capture_output=True, text=True)
        if result.returncode == 0:
            print('✅ Package loading successful')
        else:
            print('❌ Package loading failed')
            exit(1)
        "

    - name: Test CLI functionality
      run: |
        # Test basic CLI functionality (skip help due to known Typer issue)
        python -c "from classroom_pilot.cli import app; print('CLI import successful')"
        python -c "from classroom_pilot.bash_wrapper import BashWrapper; print('BashWrapper import successful')"
        python -c "from classroom_pilot.config import Configuration; print('Configuration import successful')"

    - name: Test package installation
      run: |
        # Test installing as a package
        pip uninstall -y classroom-pilot
        pip install .
        python -c "import classroom_pilot; print(f'Package version: {classroom_pilot.__version__}')"

  test-bash-compatibility:
    runs-on: ubuntu-latest
    needs: test-python-wrapper

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install package
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Test bash script accessibility
      run: |
        # Verify that bash scripts are accessible from the installed package
        python -c "
        from classroom_pilot.bash_wrapper import BashWrapper
        from classroom_pilot.config import Configuration
        
        config = Configuration({
            'CLASSROOM_URL': 'https://classroom.github.com/classrooms/test/assignments/test',
            'TEMPLATE_REPO_URL': 'https://github.com/test/template',
            'GITHUB_ORGANIZATION': 'test-org'
        })
        
        wrapper = BashWrapper(config, dry_run=True)
        
        # Test that script paths can be resolved
        script_path = wrapper._get_script_path('assignment-orchestrator.sh')
        print(f'Script path: {script_path}')
        assert script_path.exists(), f'Script not found: {script_path}'
        print('✅ Bash script accessibility test passed')
        "

  integration-test:
    runs-on: ubuntu-latest
    needs: [test-python-wrapper, test-bash-compatibility]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install package
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Create comprehensive test configuration
      run: |
        cat > assignment.conf << EOF
        # Comprehensive test configuration
        CLASSROOM_URL="https://classroom.github.com/classrooms/123456/assignments/test-assignment"
        TEMPLATE_REPO_URL="https://github.com/test-org/template-repo"
        GITHUB_ORGANIZATION="test-org"
        CLASSROOM_REPO_URL="https://github.com/test-org/classroom-assignment"
        SECRETS_JSON='{"TEST_SECRET": "test-value", "ANOTHER_SECRET": "another-value"}'
        
        # Optional settings
        INSTRUCTOR_HANDLE="instructor"
        ASSIGNMENT_NAME="test-assignment"
        SEMESTER="fall2025"
        EOF

    - name: Run end-to-end workflow test
      run: |
        echo "🧪 Running end-to-end workflow test..."
        
        # Test complete workflow
        classroom-pilot --dry-run --verbose run
        
        # Test individual commands
        classroom-pilot --dry-run sync
        classroom-pilot --dry-run discover  
        classroom-pilot --dry-run secrets
        classroom-pilot --dry-run assist
        
        # Test management commands
        classroom-pilot --dry-run setup
        classroom-pilot --dry-run update
        classroom-pilot --dry-run cron status
        classroom-pilot --dry-run cron-sync
        
        # Test cycle commands
        classroom-pilot --dry-run cycle --list test-assignment
        classroom-pilot --dry-run cycle --force homework01 student123 test-org
        
        echo "✅ End-to-end workflow test completed successfully"

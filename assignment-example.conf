# Example Assignment Configuration Template
# Copy this file and customize for your specific assignment: cp tools/assignment-example.conf assignment.conf

# =============================================================================
# ASSIGNMENT INFORMATION
# =============================================================================

# GitHub Classroom assignment URL (assignment management page)
# Find this by: GitHub Classroom → Your Classroom → Assignments → Click assignment → Copy URL
CLASSROOM_URL="https://classroom.github.com/classrooms/CLASSROOM-ID/assignments/ASSIGNMENT-NAME"

# GitHub Classroom repository URL (OPTIONAL - only needed for push-to-classroom.sh)
# This is the actual repository created by GitHub Classroom for the assignment
# Find this by looking for a repo in your organization like "classroom-semester-assignment-template"
# CLASSROOM_REPO_URL="https://github.com/ORG/classroom-semester-assignment-template"

# Template repository URL (your source of truth)
TEMPLATE_REPO_URL="https://github.com/YOUR-ORG/your-assignment-template.git"

# GitHub organization name
GITHUB_ORGANIZATION="YOUR-ORG"

# Assignment name (auto-extracted from CLASSROOM_URL if not specified)
# ASSIGNMENT_NAME="your-assignment-name"

# =============================================================================
# UNIVERSAL FILE TYPE SUPPORT (v1.6+)
# =============================================================================

# Main assignment file (supports ANY file type!)
# Examples for different assignment types:
ASSIGNMENT_FILE="assignment.ipynb"        # Jupyter notebook
# ASSIGNMENT_FILE="homework.py"           # Python assignment
# ASSIGNMENT_FILE="assignment.cpp"        # C++ assignment  
# ASSIGNMENT_FILE="queries.sql"           # SQL assignment
# ASSIGNMENT_FILE="index.html"            # Web development
# ASSIGNMENT_FILE="README.md"             # Documentation assignment

# Legacy support (deprecated - use ASSIGNMENT_FILE instead)
# ASSIGNMENT_NOTEBOOK="assignment.ipynb"

# =============================================================================
# REPOSITORY DISCOVERY OPTIONS
# =============================================================================

# Include template repository in batch operations
INCLUDE_TEMPLATE_IN_BATCH=false

# Exclude instructor-* repositories from student operations (recommended: true for student-focused operations)
EXCLUDE_INSTRUCTOR_REPOS=true

# =============================================================================
# SECRET MANAGEMENT
# =============================================================================

# Only configure secrets that you actually have token files for
SECRETS=(
    "INSTRUCTOR_TESTS_TOKEN:instructor_token.txt:Token for accessing instructor test repository"
    # "GRADING_TOKEN:grading_token.txt:Token for automated grading system"
    # "CUSTOM_SECRET:custom_token.txt:Description of your custom secret"
)

SECRET_MAX_AGE_DAYS=90          # Update secrets older than this many days
SECRET_FORCE_UPDATE=false       # Set to true to force update all secrets regardless of age

# =============================================================================
# AUTOMATION OPTIONS
# =============================================================================

# Template synchronization (requires CLASSROOM_REPO_URL)
SYNC_TEMPLATE=false             # Set to true when you have CLASSROOM_REPO_URL configured
SYNC_BRANCH="main"              # Branch to sync from template

# =============================================================================
# WORKFLOW CONTROL
# =============================================================================

# Steps to execute (customize for your needs)
STEP_SYNC_TEMPLATE=false        # Skip template sync for testing (requires CLASSROOM_REPO_URL)
STEP_DISCOVER_REPOS=true        # Discover student repositories
STEP_MANAGE_SECRETS=true        # Add/update secrets in student repositories  
STEP_ASSIST_STUDENTS=false      # Run student assistance tools (optional)
STEP_CYCLE_COLLABORATORS=false  # Fix student repository access by cycling collaborator permissions (optional)

# Dry run mode (preview actions without executing)
DRY_RUN=false

# =============================================================================
# OUTPUT SETTINGS
# =============================================================================

OUTPUT_DIR="tools/generated"                    # Directory for generated files
STUDENT_REPOS_FILE="student-repos-batch.txt"    # File with all discovered repositories
STUDENTS_ONLY_FILE="student-repos-students-only.txt"  # File with student-only repositories

# =============================================================================
# ADVANCED OPTIONS
# =============================================================================

# GitHub CLI settings
GH_CLI_TIMEOUT=30               # Timeout for GitHub CLI operations (seconds)

# Parallel processing
MAX_PARALLEL_OPERATIONS=5       # Maximum number of parallel operations

# Logging
LOG_LEVEL="INFO"                # DEBUG, INFO, WARN, ERROR
LOG_FILE="logs/assignment-workflow.log"

# Backup settings
CREATE_BACKUPS=true             # Create backups before major operations
BACKUP_DIR="backups"            # Directory to store backups

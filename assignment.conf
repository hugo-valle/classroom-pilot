# CS6600 Assignment Configuration
# This file contains all the necessary information to manage a GitHub Classroom assignment

# =============================================================================
# ASSIGNMENT INFORMATION
# =============================================================================

# GitHub Classroom assignment URL (used to extract assignment name and discover student repos)
# This is the URL you see when managing the assignment in GitHub Classroom
# Example: https://classroom.github.com/classrooms/12345/assignments/assignment-name
CLASSROOM_URL="https://classroom.github.com/classrooms/206604610-wsu-ml-dl-classroom-fall25/assignments/cs6600-m1-homework1"

# GitHub Classroom repository URL (OPTIONAL - only needed for push-to-classroom.sh)
# This is the actual repository URL created by GitHub Classroom for the assignment
# Different from CLASSROOM_URL above - this is the git repository URL
# Format: https://github.com/[ORG]/[classroom-semester-assignment-name]
# To find this: look for a repo in your organization with a name like "classroom-fall25-assignment-name"
CLASSROOM_REPO_URL="https://github.com/WSU-ML-DL/wsu-ml-dl-classroom-fall25-cs6600-m1-homework1-cs6600-m1-homework1-template"

# Template repository URL (source of truth for updates)
TEMPLATE_REPO_URL="https://github.com/WSU-ML-DL/cs6600-m1-homework1-template.git"

# GitHub organization name (usually extracted from URLs but can be overridden)
GITHUB_ORGANIZATION="WSU-ML-DL"

# Assignment name (auto-extracted from classroom URL if not specified)
# ASSIGNMENT_NAME="cs6600-m1-homework1"

# Main assignment file (the primary file students work on - any type)
# Universal support: .ipynb, .py, .cpp, .sql, .md, .html, etc.
ASSIGNMENT_FILE="m1_homework1.ipynb"

# Legacy support (deprecated - use ASSIGNMENT_FILE instead)
# ASSIGNMENT_NOTEBOOK="m1_homework1.ipynb"

# =============================================================================
# SECRET MANAGEMENT
# =============================================================================

# List of secrets to add to student repositories
# Format: SECRET_NAME:TOKEN_FILE_PATH:DESCRIPTION
SECRETS=(
    "INSTRUCTOR_TESTS_TOKEN:instructor_token.txt:Token for accessing instructor test repository"
    # "CUSTOM_SECRET:custom_token.txt:Description of custom secret"
)

# Secret management options
SECRET_MAX_AGE_DAYS=90          # Update secrets older than this many days
SECRET_FORCE_UPDATE=false       # Set to true to force update all secrets regardless of age

# =============================================================================
# AUTOMATION OPTIONS
# =============================================================================

# Template synchronization
SYNC_TEMPLATE=true              # Whether to sync template to classroom before processing
SYNC_BRANCH="main"              # Branch to sync from template

# Repository discovery options
INCLUDE_TEMPLATE_IN_BATCH=false # Include template repository in batch operations
EXCLUDE_INSTRUCTOR_REPOS=false # Exclude instructor-* repositories from student operations

# Output file configuration
# Output Settings
OUTPUT_DIR="tools/generated"
STUDENT_REPOS_FILE="student-repos-batch.txt"
STUDENTS_ONLY_FILE="student-repos-students-only.txt"

# =============================================================================
# WORKFLOW CONTROL
# =============================================================================

# Steps to execute (set to false to skip)
STEP_SYNC_TEMPLATE=true         # Step 1: Sync template repository to classroom
STEP_DISCOVER_REPOS=true        # Step 2: Discover student repositories
STEP_MANAGE_SECRETS=true        # Step 3: Add/update secrets in student repositories
STEP_ASSIST_STUDENTS=false      # Step 4: Run student assistance tools (optional)

# Dry run mode (shows what would be done without executing)
DRY_RUN=false

# =============================================================================
# NOTIFICATION SETTINGS (Future Enhancement)
# =============================================================================

# Email notifications (not implemented yet)
# EMAIL_NOTIFICATIONS=false
# EMAIL_RECIPIENTS="instructor@example.com"

# Slack notifications (not implemented yet)
# SLACK_WEBHOOK_URL=""
# SLACK_CHANNEL="#cs6600-notifications"

# =============================================================================
# ADVANCED OPTIONS
# =============================================================================

# GitHub CLI settings
GH_CLI_TIMEOUT=30               # Timeout for GitHub CLI operations (seconds)

# Parallel processing
MAX_PARALLEL_OPERATIONS=5       # Maximum number of parallel operations for batch processing

# Logging
LOG_LEVEL="INFO"                # DEBUG, INFO, WARN, ERROR
LOG_FILE="logs/assignment-workflow.log"

# Backup settings
CREATE_BACKUPS=true             # Create backups before major operations
BACKUP_DIR="backups"            # Directory to store backups

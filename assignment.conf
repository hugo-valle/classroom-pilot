# GitHub Classroom Assignment Configuration
# Generated by setup-assignment.py on 2025-10-06 21:58:53
# This file contains all the necessary information to manage a GitHub Classroom assignment

# =============================================================================
# ASSIGNMENT INFORMATION
# =============================================================================

# GitHub Classroom assignment URL (used to extract assignment name and discover student repos)
# This is the URL you see when managing the assignment in GitHub Classroom
# Example: https://classroom.github.com/classrooms/12345/assignments/assignment-name
CLASSROOM_URL="https://classroom.github.com/classrooms/228391192-soc-simple-classroom-template/assignments/assignment1"

# GitHub Classroom repository URL (OPTIONAL - only needed for template synchronization)
# This is the actual repository URL created by GitHub Classroom for the assignment
# Different from CLASSROOM_URL above - this is the git repository URL
# Format: https://github.com/[ORG]/[classroom-semester-assignment-name]
# To find this: look for a repo in your organization with a name like "classroom-fall25-assignment-name"
# CLASSROOM_REPO_URL=""  # Optional - add if using template synchronization

# Template repository URL (source of truth for updates)
TEMPLATE_REPO_URL="https://github.com/soc-simple/assignment1-template.git"

# GitHub organization name (usually extracted from URLs but can be overridden)
GITHUB_ORGANIZATION="soc-simple"

# Assignment name (auto-extracted from classroom URL if not specified)
ASSIGNMENT_NAME="assignment1"

# Main assignment file (the primary file students work on - any type)
# Universal support: .ipynb, .py, .cpp, .sql, .md, .html, etc.
ASSIGNMENT_FILE="assignment.ipynb"

# =============================================================================
# SECRET MANAGEMENT
# =============================================================================

# Secrets to add to student repositories
# NEW Format (v3.1+): SECRET_NAME:description:validate_format
# Uses centralized token management - no separate token files needed!
# validate_format: true for GitHub tokens (ghp_), false for other secrets
# 
# Use this when you have a separate private instructor repository with tests
# that students need access to via GitHub secrets.
SECRETS_CONFIG="
INSTRUCTOR_TESTS_TOKEN:Token for accessing instructor test repository:true
"

# =============================================================================
# WORKFLOW CONFIGURATION
# =============================================================================

# Workflow steps to execute (true/false)
STEP_SYNC_TEMPLATE=true
STEP_DISCOVER_REPOS=true
STEP_MANAGE_SECRETS=true   # Set to false if tests are in template repo (no separate instructor repo)
STEP_ASSIST_STUDENTS=false

# Output directory for generated files
OUTPUT_DIR="tools/generated"

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Repository filtering
EXCLUDE_INSTRUCTOR_REPOS=true
INCLUDE_TEMPLATE_REPO=false

# Dry run mode (for testing)
DEFAULT_DRY_RUN=false

# Logging level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Confirmation prompts
SKIP_CONFIRMATIONS=false
